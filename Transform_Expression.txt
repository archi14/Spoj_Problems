#include <iostream>
#include <bits/stdc++.h>
using namespace std;
// [infix to postfix conversion]

//function returning priority of elements
int priority(char a)
{
	if(a=='^')
	{
		return 5;
	}else if(a=='/')
	{
		return 4;
	}else if(a=='*')
	{
		return 3;
	}else if(a=='-')
	{
		return 2;
	}else if(a=='+')
	{
		return 1;
	}
	return 0;
}
int main() {
	
	int t;
	cin>>t;
	for(int q=0;q<t;q++)
	{
		stack<char> s;
		string a;
		cin>>a;
		string postfix="";
		for(int i=0;i<a.size();i++)
		{
			if((a[i]>=65 && a[i]<91) || (a[i]>=97 && a[i]<123)) // if operand simply add to the answer
			{
				postfix+=a[i];
			}
			else if(a[i]=='(') // if opening bracket push to the stack
			{
				s.push(a[i]);
			}
			else if(a[i]==')') // pop operators until an opening bracket is encountered and add the popped values to answer.
			{
				while(!s.empty() && s.top()!='(')
				{
					postfix+= s.top();
					s.pop();
				}
					s.pop();
			}else
			{
				while(!s.empty() && priority(a[i])<=priority(s.top()))// pop if the priority of top element is greater or equal to current element. 
				{
					postfix+=s.top();
					s.pop();
				}
				s.push(a[i]);
			}
		}
		cout<<postfix<<endl;
	}
	return 0;
}